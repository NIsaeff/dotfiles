# ================================
# TMUX CONFIGURATION
# ================================

# Set default shell
set-option -g default-shell /bin/zsh

# ================================
# VIM KEYBINDS
# ================================

# Set prefix to Ctrl-a (more vim-like than Ctrl-b)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Vim-style pane navigation with Ctrl+hjkl (smart vim-tmux navigation)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Pane resizing with Ctrl+arrow keys
bind -n C-Left resize-pane -L 5
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind -n C-Right resize-pane -R 5

# Window navigation (Alt instead of Ctrl to avoid conflicts)
bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

# Vim-style copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# Enter copy mode with Escape (vim-like)
bind Escape copy-mode

# ================================
# MASTER PANE SYSTEM
# ================================

# Set master pane (top-right by default, pane 1 in typical layout)
set-environment -g TMUX_MASTER_PANE_ID ""

# Function to set current pane as master
bind M run-shell 'tmux set-environment TMUX_MASTER_PANE_ID "#{pane_id}"' \; display-message "Master pane set to #{pane_id}"

# Function to sync to master pane (directory and virtual environment)
bind-key -n C-y run-shell '
    master_pane=$(tmux show-environment TMUX_MASTER_PANE_ID 2>/dev/null | cut -d= -f2);
    if [ -n "$master_pane" ] && tmux list-panes -F "#{pane_id}" | grep -q "$master_pane"; then
        current_dir=$(tmux display-message -p "#{pane_current_path}");
        venv_path="";
        if [ -n "$VIRTUAL_ENV" ]; then
            venv_path="$VIRTUAL_ENV";
        elif [ -n "$CONDA_DEFAULT_ENV" ]; then
            venv_path="conda:$CONDA_DEFAULT_ENV";
        fi;
        if [ -n "$venv_path" ]; then
            if [[ "$venv_path" == conda:* ]]; then
                env_name=$(echo "$venv_path" | cut -d: -f2);
                tmux send-keys -t "$master_pane" "conda activate $env_name" C-m;
            else
                tmux send-keys -t "$master_pane" "source $venv_path/bin/activate" C-m;
            fi;
        fi;
        tmux send-keys -t "$master_pane" "cd \"$current_dir\"" C-m;
    else
        tmux display-message "No valid master pane set. Use prefix+M to set master pane.";
    fi'

# Auto-set master pane in development layouts (run after creating layout)
bind-key D run-shell '
    # Get the top-right pane (typically pane 1 in 3-pane layout)
    master_pane=$(tmux list-panes -F "#{pane_id}" | sed -n "2p");
    if [ -n "$master_pane" ]; then
        tmux set-environment TMUX_MASTER_PANE_ID "$master_pane";
        tmux display-message "Auto-set master pane to $master_pane (top-right)";
    fi'

# ================================
# PANE MANAGEMENT
# ================================

# Split panes with vim-style keys and maintain current directory
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Quick pane layouts
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical  
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# ================================
# ESSENTIAL SETTINGS
# ================================

# Enable mouse support
set -g mouse on

# Increase scrollback buffer size
set -g history-limit 10000

# Fix colors and enable true color support
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# Faster command sequences (no delay for escape)
set -s escape-time 0

# Increase repeat timeout for resize commands
set -g repeat-time 1000

# Start window and pane indexing at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Enable focus events for vim integration
set -g focus-events on

# ================================
# STATUS BAR
# ================================

# Update status bar every second
set -g status-interval 1

# Status bar position
set -g status-position bottom

# Status bar colors (matching your Catppuccin theme)
set -g status-bg "#1e1e2e"
set -g status-fg "#cdd6f4"

# Window status colors
setw -g window-status-current-style "fg=#1e1e2e,bg=#89b4fa,bold"
setw -g window-status-style "fg=#6c7086"

# Pane border colors
set -g pane-border-style "fg=#45475a"
set -g pane-active-border-style "fg=#89b4fa"

# Status bar content
set -g status-left "#[fg=#89b4fa,bold][#{session_name}] "
set -g status-left-length 20

set -g status-right "#[fg=#f9e2af]%Y-%m-%d %H:%M:%S #[fg=#89b4fa,bold][#{host}]"
set -g status-right-length 50

# Window status format
setw -g window-status-format " #{window_index}:#{window_name} "
setw -g window-status-current-format " #{window_index}:#{window_name} "

# ================================
# KEY BINDINGS
# ================================

# Reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Fallback pane navigation (prefix + hjkl) if Ctrl+hjkl doesn't work
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Kill pane/window without confirmation
bind x kill-pane
bind X kill-window

# New window with name prompt
bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"

# ================================
# PLUGINS (if using tpm in future)
# ================================

# Placeholder for plugin manager setup
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'